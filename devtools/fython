#!/bin/bash
set -eo pipefail # stop if any error

exec () {
  FYTHON_CODE=$1
  ERLANG_PATHS=${@:2}

  ERLANG_PATHS_FORMATED=""
  for ERL_PATH in $ERLANG_PATHS; do
    ERLANG_PATHS_FORMATED=$ERLANG_PATHS_FORMATED"-pa $ERL_PATH "
  done
  erl $ERLANG_PATHS_FORMATED -noshell -eval "'Fython.Core':eval_string(<<"'"'"$FYTHON_CODE"'"'">>)." -run init stop
}

bootstrap () {
  FYTHON_CODE_PATH=$1
  SECOND_COMPILED_FOLDER=$2
  FYTHON_BEAMS_USE_TO_BOOTSTRAP=$3
  ELIXIR_BEAMS_PATH=$4

  [[ -z "$FYTHON_CODE_PATH" ]] && echo "Missing fython src code path" && exit 1
  [[ -z "$FYTHON_BEAMS_USE_TO_BOOTSTRAP" ]] && echo "Missing fython's beams folder" && exit 1
  [[ -z "$ELIXIR_BEAMS_PATH" ]] && echo "Missing elixir's beams folder" && exit 1

  PREFIX=Bootstrap
  FIRST_COMPILED_FOLDER=/test_compiled1

  # 1ยบ Compile with a module prefix to prevent modules overriding

  rm -rf $FIRST_COMPILED_FOLDER/*
  erl -pa $FYTHON_BEAMS_USE_TO_BOOTSTRAP \
    -noshell \
    -eval "'Fython.Core.Code':compile_project(<<"'"'"$FYTHON_CODE_PATH"'"'">>, <<"'"'"$FIRST_COMPILED_FOLDER"'"'">>, <<"'"'"$PREFIX"'"'">>)." \
    -run init stop

  cd $ELIXIR_BEAMS_PATH && cp -r . "$FIRST_COMPILED_FOLDER" && cd /

  # 2ยบ Bootstrap again using previous step, but without the prefix this time
  # so we have the final bootstraped beams

  rm -rf $SECOND_COMPILED_FOLDER/*
  erl -pa $FIRST_COMPILED_FOLDER \
    -noshell \
    -eval "'Fython.$PREFIX.Core.Code':compile_project(<<"'"'"$FYTHON_CODE_PATH"'"'">>, <<"'"'"$SECOND_COMPILED_FOLDER"'"'">>, <<"'"'""'"'">>)." \
    -run init stop

  cd $ELIXIR_BEAMS_PATH && cp -r . "$SECOND_COMPILED_FOLDER" && cd /

  # Creaning up disk
  rm -rf $FIRST_COMPILED_FOLDER
}

$*