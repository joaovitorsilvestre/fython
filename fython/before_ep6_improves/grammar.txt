expr        : IDENTIFIER EQ expr
            : comp-expr ((KEYWORD:and|KEYWORD:or) comp-expr)*

comp-expr   : KEYWORD:not comp-expr
            : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

arith-expr  : term ((PLUS|MINUS) term)*

term        : factor ((MUL|DIV) factor)*

factor      : (PLUS|MINUS) factor
            : power

power       : call(POW factor)*

call        : atom (LPAREN (expr (COMMA expr)*)? RPAREN)?

atom        : INT|FLOAT|IDENTIFIER
            : LPAREN expr RPAREN
            : if-expr
            : func-dev

if-expr     : KEYWORD:if expr KEYWORD:then expr
            : (KEYWORD:elif expr KEYWORD:then expr)*
            : (KEYWORD:else expr)?

func-def    : KEYWORD:def IDENTIFIER?
              LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
              ARROW expr